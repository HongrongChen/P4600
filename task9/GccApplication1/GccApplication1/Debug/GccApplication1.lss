
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000112  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000112  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000144  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006af  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000617  00000000  00000000  00000863  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000230  00000000  00000000  00000e7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000010ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000035c  00000000  00000000  000010f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  0000144c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5a 00 	call	0xb4	; 0xb4 <main>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <setup>:
	
}

void setup()
{
	DDRD |= (1<<PD6)|(1<<PD5); //set as ouput pin
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	80 66       	ori	r24, 0x60	; 96
  84:	8a b9       	out	0x0a, r24	; 10

	//PORTD &= ~(1<<PD6); //start pin as 0

	TCCR0B = 0x01; // normal counting mode, no clock prescaling
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	85 bd       	out	0x25, r24	; 37
	//TIMSK0 |=(1<<OCIE0A)|(1<<TOIE0);		//enables timer 0 overflow interrupt
	TCCR0A |= (1<<COM0A0)| (1<<COM0A1);
  8a:	84 b5       	in	r24, 0x24	; 36
  8c:	80 6c       	ori	r24, 0xC0	; 192
  8e:	84 bd       	out	0x24, r24	; 36
	TCCR0A |= (1<<WGM00)|(1<<WGM01);
  90:	84 b5       	in	r24, 0x24	; 36
  92:	83 60       	ori	r24, 0x03	; 3
  94:	84 bd       	out	0x24, r24	; 36
	
	TCCR0B |= (1<<COM0B0)| (1<<COM0B1);
  96:	85 b5       	in	r24, 0x25	; 37
  98:	80 63       	ori	r24, 0x30	; 48
  9a:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<WGM00);
  9c:	85 b5       	in	r24, 0x25	; 37
  9e:	81 60       	ori	r24, 0x01	; 1
  a0:	85 bd       	out	0x25, r24	; 37
	TCCR0B |= (1<<CS00);
  a2:	85 b5       	in	r24, 0x25	; 37
  a4:	81 60       	ori	r24, 0x01	; 1
  a6:	85 bd       	out	0x25, r24	; 37
	
	OCR0A = 200;	//number to compare
  a8:	88 ec       	ldi	r24, 0xC8	; 200
  aa:	87 bd       	out	0x27, r24	; 39
	OCR0B = 100;
  ac:	84 e6       	ldi	r24, 0x64	; 100
  ae:	88 bd       	out	0x28, r24	; 40

	sei();
  b0:	78 94       	sei
  b2:	08 95       	ret

000000b4 <main>:

}

int main()
{
	setup();
  b4:	0e 94 40 00 	call	0x80	; 0x80 <setup>
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <main+0x4>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
